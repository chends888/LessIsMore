
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVASSIG CLOSEPAR DIV EQUALS GREATER IDENT INT LESS MINUS MUL OPENPAR PLUS PRINT VARDECstatement : VARDEC IDENTstatement : IDENT ASSIG exprstatement : exprexpr : expr PLUS expr\n            | expr MINUS expr\n            | expr DIV expr\n            | expr MUL exprexpr : INT'
    
_lr_action_items = {'VARDEC':([0,],[2,]),'IDENT':([0,2,],[3,6,]),'INT':([0,7,8,9,10,11,],[5,5,5,5,5,5,]),'$end':([1,4,5,6,12,13,14,15,16,],[0,-3,-8,-1,-2,-4,-5,-6,-7,]),'ASSIG':([3,],[7,]),'PLUS':([4,5,12,13,14,15,16,],[8,-8,8,-4,-5,-6,-7,]),'MINUS':([4,5,12,13,14,15,16,],[9,-8,9,-4,-5,-6,-7,]),'DIV':([4,5,12,13,14,15,16,],[10,-8,10,10,10,-6,-7,]),'MUL':([4,5,12,13,14,15,16,],[11,-8,11,11,11,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expr':([0,7,8,9,10,11,],[4,12,13,14,15,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> VARDEC IDENT','statement',2,'p_vardec','lexer_parser.py',66),
  ('statement -> IDENT ASSIG expr','statement',3,'p_assig','lexer_parser.py',71),
  ('statement -> expr','statement',1,'p_statement_expr','lexer_parser.py',76),
  ('expr -> expr PLUS expr','expr',3,'p_binop','lexer_parser.py',81),
  ('expr -> expr MINUS expr','expr',3,'p_binop','lexer_parser.py',82),
  ('expr -> expr DIV expr','expr',3,'p_binop','lexer_parser.py',83),
  ('expr -> expr MUL expr','expr',3,'p_binop','lexer_parser.py',84),
  ('expr -> INT','expr',1,'p_int','lexer_parser.py',102),
]
